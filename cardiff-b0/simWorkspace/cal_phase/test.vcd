$version Generated by VerilatedVcd $end
$date Mon Dec 20 16:30:04 2021
 $end
$timescale   1ps $end

 $scope module TOP $end
  $var wire  1 o clk $end
  $var wire 10 n phase [9:0] $end
  $var wire  1 m phase_vld $end
  $var wire  1 p reset $end
  $var wire  1 O rg_bypass_mean $end
  $var wire  1 N rg_calphase_en $end
  $var wire  3 P rg_cordic_iternum [2:0] $end
  $var wire  8 a rg_cos_table_0 [7:0] $end
  $var wire  8 b rg_cos_table_1 [7:0] $end
  $var wire  8 c rg_cos_table_2 [7:0] $end
  $var wire  8 d rg_cos_table_3 [7:0] $end
  $var wire  8 e rg_cos_table_4 [7:0] $end
  $var wire  8 f rg_cos_table_5 [7:0] $end
  $var wire  8 g rg_cos_table_6 [7:0] $end
  $var wire  8 h rg_cos_table_7 [7:0] $end
  $var wire  8 Q rg_leakage_table_0 [7:0] $end
  $var wire  8 R rg_leakage_table_1 [7:0] $end
  $var wire  8 S rg_leakage_table_2 [7:0] $end
  $var wire  8 T rg_leakage_table_3 [7:0] $end
  $var wire  8 U rg_leakage_table_4 [7:0] $end
  $var wire  8 V rg_leakage_table_5 [7:0] $end
  $var wire  8 W rg_leakage_table_6 [7:0] $end
  $var wire  8 X rg_leakage_table_7 [7:0] $end
  $var wire  8 Y rg_sin_table_0 [7:0] $end
  $var wire  8 Z rg_sin_table_1 [7:0] $end
  $var wire  8 [ rg_sin_table_2 [7:0] $end
  $var wire  8 \ rg_sin_table_3 [7:0] $end
  $var wire  8 ] rg_sin_table_4 [7:0] $end
  $var wire  8 ^ rg_sin_table_5 [7:0] $end
  $var wire  8 _ rg_sin_table_6 [7:0] $end
  $var wire  8 ` rg_sin_table_7 [7:0] $end
  $var wire  3 i valid_num [2:0] $end
  $var wire  8 k vin1 [7:0] $end
  $var wire  8 l vin2 [7:0] $end
  $var wire  1 j vin_vld $end
  $scope module cal_phase $end
   $var wire  1 r calvn_finish $end
   $var wire  1 r calvn_finish_1 $end
   $var wire  8 , calvn_mean [7:0] $end
   $var wire  8 - calvn_vn_0 [7:0] $end
   $var wire  8 . calvn_vn_1 [7:0] $end
   $var wire  8 / calvn_vn_2 [7:0] $end
   $var wire  8 0 calvn_vn_3 [7:0] $end
   $var wire  8 1 calvn_vn_4 [7:0] $end
   $var wire  8 2 calvn_vn_5 [7:0] $end
   $var wire  8 3 calvn_vn_6 [7:0] $end
   $var wire  8 4 calvn_vn_7 [7:0] $end
   $var wire  1 o clk $end
   $var wire 10 + cordic_res [9:0] $end
   $var wire  1 7 cordic_res_vld $end
   $var wire 16 5 dot_psum_out1 [15:0] $end
   $var wire 16 6 dot_psum_out2 [15:0] $end
   $var wire  1 s dot_psum_vld $end
   $var wire  8 , mean [7:0] $end
   $var wire 10 + ph_cal [9:0] $end
   $var wire  1 q ph_vld $end
   $var wire 10 + phase [9:0] $end
   $var wire  1 q phase_vld $end
   $var wire 16 5 psum_out1 [15:0] $end
   $var wire 16 6 psum_out2 [15:0] $end
   $var wire  1 s psum_vld $end
   $var wire  1 p reset $end
   $var wire  1 O rg_bypass_mean $end
   $var wire  1 N rg_calphase_en $end
   $var wire  3 P rg_cordic_iternum [2:0] $end
   $var wire  8 a rg_cos_table_0 [7:0] $end
   $var wire  8 b rg_cos_table_1 [7:0] $end
   $var wire  8 c rg_cos_table_2 [7:0] $end
   $var wire  8 d rg_cos_table_3 [7:0] $end
   $var wire  8 e rg_cos_table_4 [7:0] $end
   $var wire  8 f rg_cos_table_5 [7:0] $end
   $var wire  8 g rg_cos_table_6 [7:0] $end
   $var wire  8 h rg_cos_table_7 [7:0] $end
   $var wire  8 Q rg_leakage_table_0 [7:0] $end
   $var wire  8 R rg_leakage_table_1 [7:0] $end
   $var wire  8 S rg_leakage_table_2 [7:0] $end
   $var wire  8 T rg_leakage_table_3 [7:0] $end
   $var wire  8 U rg_leakage_table_4 [7:0] $end
   $var wire  8 V rg_leakage_table_5 [7:0] $end
   $var wire  8 W rg_leakage_table_6 [7:0] $end
   $var wire  8 X rg_leakage_table_7 [7:0] $end
   $var wire  8 Y rg_sin_table_0 [7:0] $end
   $var wire  8 Z rg_sin_table_1 [7:0] $end
   $var wire  8 [ rg_sin_table_2 [7:0] $end
   $var wire  8 \ rg_sin_table_3 [7:0] $end
   $var wire  8 ] rg_sin_table_4 [7:0] $end
   $var wire  8 ^ rg_sin_table_5 [7:0] $end
   $var wire  8 _ rg_sin_table_6 [7:0] $end
   $var wire  8 ` rg_sin_table_7 [7:0] $end
   $var wire  3 i valid_num [2:0] $end
   $var wire  3 t valid_num_true [2:0] $end
   $var wire  8 k vin1 [7:0] $end
   $var wire  8 l vin2 [7:0] $end
   $var wire  1 j vin_vld $end
   $var wire  8 - vn_0 [7:0] $end
   $var wire  8 . vn_1 [7:0] $end
   $var wire  8 / vn_2 [7:0] $end
   $var wire  8 0 vn_3 [7:0] $end
   $var wire  8 1 vn_4 [7:0] $end
   $var wire  8 2 vn_5 [7:0] $end
   $var wire  8 3 vn_6 [7:0] $end
   $var wire  8 4 vn_7 [7:0] $end
   $scope module calvn $end
    $var wire  8 - Vins_0 [7:0] $end
    $var wire  8 . Vins_1 [7:0] $end
    $var wire  8 / Vins_2 [7:0] $end
    $var wire  8 0 Vins_3 [7:0] $end
    $var wire  8 1 Vins_4 [7:0] $end
    $var wire  8 2 Vins_5 [7:0] $end
    $var wire  8 3 Vins_6 [7:0] $end
    $var wire  8 4 Vins_7 [7:0] $end
    $var wire  8 # bigger [7:0] $end
    $var wire  1 o clk $end
    $var wire  1 & data_load_finish $end
    $var wire  1 N en $end
    $var wire  1 r finish $end
    $var wire  8 9 max_v [7:0] $end
    $var wire  8 , mean [7:0] $end
    $var wire  1 u mean_finish $end
    $var wire  1 r mean_finish_regNext $end
    $var wire  8 : min_v [7:0] $end
    $var wire  1 p reset $end
    $var wire  1 O rg_bypass_mean $end
    $var wire  8 Q rg_leakage_table_0 [7:0] $end
    $var wire  8 R rg_leakage_table_1 [7:0] $end
    $var wire  8 S rg_leakage_table_2 [7:0] $end
    $var wire  8 T rg_leakage_table_3 [7:0] $end
    $var wire  8 U rg_leakage_table_4 [7:0] $end
    $var wire  8 V rg_leakage_table_5 [7:0] $end
    $var wire  8 W rg_leakage_table_6 [7:0] $end
    $var wire  8 X rg_leakage_table_7 [7:0] $end
    $var wire  8 $ smaller [7:0] $end
    $var wire  1 % v1gtv2 $end
    $var wire  3 8 v_cnt [2:0] $end
    $var wire  3 i valid_num [2:0] $end
    $var wire  8 k vin1 [7:0] $end
    $var wire  8 l vin2 [7:0] $end
    $var wire  1 j vin_vld $end
    $var wire  8 - vn_0 [7:0] $end
    $var wire  8 . vn_1 [7:0] $end
    $var wire  8 / vn_2 [7:0] $end
    $var wire  8 0 vn_3 [7:0] $end
    $var wire  8 1 vn_4 [7:0] $end
    $var wire  8 2 vn_5 [7:0] $end
    $var wire  8 3 vn_6 [7:0] $end
    $var wire  8 4 vn_7 [7:0] $end
   $upscope $end
   $scope module cordic $end
    $var wire  7 z KAngle_0 [6:0] $end
    $var wire  7 { KAngle_1 [6:0] $end
    $var wire  7 | KAngle_2 [6:0] $end
    $var wire  7 } KAngle_3 [6:0] $end
    $var wire  7 ~ KAngle_4 [6:0] $end
    $var wire  7 !! KAngle_5 [6:0] $end
    $var wire  7 !! KAngle_6 [6:0] $end
    $var wire  3 F cal_cnt [2:0] $end
    $var wire  1 G cal_en $end
    $var wire  1 J cal_en_regNext $end
    $var wire  1 * cal_finish $end
    $var wire  1 M cal_finish_delay $end
    $var wire  1 H cal_start $end
    $var wire  1 o clk $end
    $var wire  1 N en $end
    $var wire  1 7 finish $end
    $var wire  1 I nozero_flg $end
    $var wire 10 + res [9:0] $end
    $var wire 10 + res_out [9:0] $end
    $var wire 11 A res_rg [10:0] $end
    $var wire  1 7 res_vld $end
    $var wire  1 p reset $end
    $var wire  3 P rg_cordic_iternum [2:0] $end
    $var wire  1 s vld $end
    $var wire 16 5 x [15:0] $end
    $var wire 19 B x_ext [18:0] $end
    $var wire 19 D x_ins [18:0] $end
    $var wire 19 ? xn [18:0] $end
    $var wire 19 K xn_rightshift [18:0] $end
    $var wire 16 6 y [15:0] $end
    $var wire 19 C y_ext [18:0] $end
    $var wire 19 E y_ins [18:0] $end
    $var wire 19 @ yn [18:0] $end
    $var wire 19 L yn_rightshift [18:0] $end
   $upscope $end
   $scope module dot $end
    $var wire  1 o clk $end
    $var wire  1 N en $end
    $var wire  1 s finish $end
    $var wire  3 > mac_cnt [2:0] $end
    $var wire  1 x mac_en $end
    $var wire  1 ) mac_finish $end
    $var wire  1 y mac_start $end
    $var wire  8 , mean [7:0] $end
    $var wire 16 v product1 [15:0] $end
    $var wire 16 w product2 [15:0] $end
    $var wire 19 ; psum1 [18:0] $end
    $var wire 19 < psum2 [18:0] $end
    $var wire 16 5 psum_out1 [15:0] $end
    $var wire 16 6 psum_out2 [15:0] $end
    $var wire  1 s psum_vld $end
    $var wire  1 p reset $end
    $var wire  8 a rg_cos_table_0 [7:0] $end
    $var wire  8 b rg_cos_table_1 [7:0] $end
    $var wire  8 c rg_cos_table_2 [7:0] $end
    $var wire  8 d rg_cos_table_3 [7:0] $end
    $var wire  8 e rg_cos_table_4 [7:0] $end
    $var wire  8 f rg_cos_table_5 [7:0] $end
    $var wire  8 g rg_cos_table_6 [7:0] $end
    $var wire  8 h rg_cos_table_7 [7:0] $end
    $var wire  8 Y rg_sin_table_0 [7:0] $end
    $var wire  8 Z rg_sin_table_1 [7:0] $end
    $var wire  8 [ rg_sin_table_2 [7:0] $end
    $var wire  8 \ rg_sin_table_3 [7:0] $end
    $var wire  8 ] rg_sin_table_4 [7:0] $end
    $var wire  8 ^ rg_sin_table_5 [7:0] $end
    $var wire  8 _ rg_sin_table_6 [7:0] $end
    $var wire  8 ` rg_sin_table_7 [7:0] $end
    $var wire 19 ' s1 [18:0] $end
    $var wire 19 ( s2 [18:0] $end
    $var wire  3 t valid_num [2:0] $end
    $var wire  8 = vin_minus_mean [7:0] $end
    $var wire  8 = vin_true_in [7:0] $end
    $var wire  8 - vn_in_0 [7:0] $end
    $var wire  8 . vn_in_1 [7:0] $end
    $var wire  8 / vn_in_2 [7:0] $end
    $var wire  8 0 vn_in_3 [7:0] $end
    $var wire  8 1 vn_in_4 [7:0] $end
    $var wire  8 2 vn_in_5 [7:0] $end
    $var wire  8 3 vn_in_6 [7:0] $end
    $var wire  8 4 vn_in_7 [7:0] $end
    $var wire  1 r vn_vld $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b01000000 #
b10000100 $
0%
0&
b0000000000000000000 '
b0000000000000000000 (
0)
0*
b0000000000 +
b00000000 ,
b00000000 -
b00000000 .
b00000000 /
b00000000 0
b00000000 1
b00000000 2
b00000000 3
b00000000 4
b0000000000000000 5
b0000000000000000 6
07
b000 8
b00000000 9
b00000000 :
b0000000000000000000 ;
b0000000000000000000 <
b00000000 =
b000 >
b0000000000000000000 ?
b0000000000000000000 @
b00000000000 A
b0000000000000000000 B
b0000000000000000000 C
b0000000000000000000 D
b0000000000000000000 E
b000 F
0G
0H
1I
0J
b0000000000000000000 K
b0000000000000000000 L
0M
0N
0O
b110 P
b01000110 Q
b11100100 R
b11110010 S
b10110111 T
b01100101 U
b00111101 V
b11011011 W
b10100100 X
b01010011 Y
b10111001 Z
b10001010 [
b11000010 \
b01101110 ]
b01101010 ^
b11001111 _
b11111100 `
b01001111 a
b00110010 b
b00100010 c
b11101111 d
b01100110 e
b00100101 f
b00001001 g
b10000100 h
b100 i
0j
b10000100 k
b01000000 l
0m
b0000000000 n
0o
1p
0q
0r
1s
b111 t
0u
b0000000000000000 v
b0000000000000000 w
0x
0y
b0100000 z
b0010011 {
b0001010 |
b0000101 }
b0000011 ~
b0000001 !!
#80
0p
#85
b00000000 Q
b00000000 R
b00000000 S
b00000000 T
b00000000 U
b00000000 V
b00000000 W
b00000000 X
b00000000 Y
b01100011 Z
b01111100 [
b00110111 \
b11001001 ]
b10000100 ^
b10011101 _
b00000000 `
b01111111 a
b01001111 b
b11100100 c
b10001110 d
b10001110 e
b11100100 f
b01001111 g
b01111111 h
1o
0s
#87
0o
#89
1o
#91
0o
#93
1o
#95
0o
#97
1o
#99
0o
#101
1o
#103
0o
#105
1o
#107
0o
#109
1o
#111
0o
#113
1o
#115
0o
#117
1o
#119
0o
#121
1o
#123
0o
#125
1o
#127
0o
#129
1o
#131
0o
#133
1o
#135
0o
#137
1o
#139
0o
#141
1o
#143
0o
#145
1o
#147
0o
#149
1o
#151
0o
#153
1o
#155
0o
#157
1o
#159
0o
#161
1o
#163
0o
#165
1o
#167
0o
#169
1o
#171
0o
#173
1o
#175
0o
#177
1o
#179
0o
#181
1o
#183
0o
#185
1o
#187
0o
#189
1o
#191
0o
#193
1o
#195
0o
#197
1o
#199
0o
#201
1o
#203
0o
#205
1o
#207
0o
#209
1o
#211
0o
#213
1o
#215
0o
#217
1o
#219
0o
#221
1o
#223
0o
#225
1o
#227
0o
#229
1o
#231
0o
#233
1o
#235
0o
#237
1o
#239
0o
#241
1o
#243
0o
#245
1o
#247
0o
#249
1o
#251
0o
#253
1o
#255
0o
#257
1o
#259
0o
#261
1o
#263
0o
#265
1o
#267
0o
#269
1o
#271
0o
#273
1o
#275
0o
#277
1o
#279
0o
#281
1o
#283
0o
#285
b01101110 #
b00101000 $
1N
1j
b00101000 k
b01101110 l
1o
#287
0o
#289
b01111111 #
b01011011 $
1%
b1111111101110101000 (
b01001011 ,
b00101000 -
b01101110 .
b001 8
b01101110 9
b00101000 :
b11011101 =
b01111111 k
b01011011 l
1o
b1110111010100011 w
#291
0o
#293
b00001010 #
b10110100 $
b1111111101010101010 (
b01010011 ,
b01111111 /
b01011011 0
b010 8
b01111111 9
b11010101 =
b00001010 k
b10110100 l
1o
b1110101010101011 w
#295
0o
#297
b10001001 #
b10000011 $
0%
1&
b0000000000111011100 (
b00011001 ,
b00001010 1
b10110100 2
b011 8
b10110100 :
b00001111 =
b10000011 k
b10001001 l
1o
1u
b0000011101110001 w
#299
0o
#301
0&
b0000000010011110110 (
b00000000 ,
b10000011 3
b10001001 4
b000 8
b10000011 :
b00101000 =
0j
1o
1r
0u
b0001001111011000 w
#303
0o
#305
1o
0r
1x
1y
#307
0o
#309
b0000000101010100010 '
b0000000100001111100 (
b0000010011110110 6
b0000000010011110110 <
b01101110 =
b001 >
b0000000010011110110 C
b1111111101100001010 E
1o
b0010101010001010 v
b0010000111110010 w
0y
#311
0o
#313
b0000000111101100001 '
b1111111110010000111 (
b0000101010100010 5
b0000110101110010 6
b0000000101010100010 ;
b0000000110101110010 <
b01111111 =
b010 >
b0000000101010100010 B
b0000000110101110010 C
b1111111010101011110 D
b1111111001010001110 E
1o
b0011110110000100 v
b1111001000011100 w
#315
0o
#317
b0000000010011100011 '
b1111111010111011110 (
b0001101000000011 5
b0000100111111001 6
b0000001101000000011 ;
b0000000100111111001 <
b01011011 =
b011 >
b0000001101000000011 B
b0000000100111111001 C
b1111110010111111101 D
b1111111011000000111 E
1o
b0001001110001101 v
b1101011101111010 w
#319
0o
#321
b1111111111101110110 '
b1111111111011100011 (
b0001111011100110 5
b1111111111010111 6
b0000001111011100110 ;
b1111111111111010111 <
b00001010 =
b100 >
b0000001111011100110 B
b1111111111111010111 C
b1111110000100011010 D
b0000000000000101001 E
1o
b1111110111011010 v
b1111101110001100 w
#323
0o
#325
b0000000100100110100 '
b0000000001000010100 (
b0001111001011100 5
b1111111010111010 6
b0000001111001011100 ;
b1111111111010111010 <
b10110100 =
b101 >
b0000001111001011100 B
b1111111111010111010 C
b1111110000110100100 D
b0000000000101000110 E
1o
b0010010011010000 v
b0000100001010000 w
#327
0o
#329
b0000000110000010101 '
b1111111011001011011 (
b0010011110010000 5
b0000000011001110 6
b0000010011110010000 ;
b0000000000011001110 <
b10000011 =
b110 >
b0000010011110010000 B
b0000000000011001110 C
b1111101100001110000 D
b1111111111100110010 E
1o
b0011000001010111 v
b1101100101101101 w
#331
0o
#333
b0000000000000000000 '
b1111111000100111101 (
1)
b0011001110100101 5
b1111011100101001 6
b0000011001110100101 ;
b1111111011100101001 <
b10001001 =
b111 >
b0000011001110100101 B
b1111111011100101001 C
b1111100110001011011 D
b0000000100011010111 E
1o
b0000000000000000 v
b1100010011110111 w
#335
0o
#337
b0000000010011110110 (
0)
b1110100001100110 6
b1111110100001100110 <
b00101000 =
b000 >
b1111110100001100110 C
b0000001011110011010 E
1o
1s
b0001001111011000 w
0x
#339
0o
#341
1G
1H
1o
0s
#343
0o
#345
b0000011001110100101 ?
b1111110100001100110 @
0H
1J
b0000011001110100101 K
b1111110100001100110 L
1o
#347
0o
#349
b0000100101100111111 ?
b0000001110000001011 @
b11111100000 A
b001 F
b0000010010110011111 K
b0000000111000000101 L
1o
#351
0o
#353
b0000101100101000100 ?
b1111111011001101100 @
b11111110011 A
b010 F
b0000001011001010001 K
b1111111110110011011 L
1o
#355
0o
#357
b0000101101110101001 ?
b0000000110010111101 @
b11111101001 A
b011 F
b0000000101101110101 K
b0000000000110010111 L
1o
#359
0o
#361
b0000101110101000000 ?
b0000000000101001000 @
b11111101110 A
b100 F
b0000000010111010100 K
b0000000000000010100 L
1o
#363
0o
#365
1*
b0000101110101010100 ?
b1111111101101110100 @
b11111110001 A
b101 F
b0000000001011101010 K
b1111111111111011011 L
1o
#367
0o
#369
0*
b0000101110101111001 ?
b1111111111001011110 @
b11111110000 A
b110 F
0G
b0000000000101110101 K
b1111111111111111001 L
1M
1o
#371
0o
#373
b1111110000 +
17
0J
0M
1m
b1111110000 n
1o
1q
#375
0o
#377
07
0m
1o
0q
#379
0o
#381
1o
#383
0o
#385
1o
#387
0o
#389
1o
#391
0o
#393
1o
#395
0o
#397
1o
#399
0o
#401
